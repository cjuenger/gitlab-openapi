# /v4/groups

get:
  tags:
    - Group
  operationId: getGroups
  summary: Returns a list of all groups.
  parameters:
    - name: skip_groups
      in: query
      schema:
        type: array
        items:
          type: integer
      description: Skip the group IDs passed
    - name: all_available
      in: query
      schema:
        type: boolean
      description: > 
        Show all the groups you have access to (defaults to `false` for authenticated users, 
        `true` for administrators); Attributes owned and `min_access_level` have precedence
    - name: search
      in: query
      schema:
        type: string
      description: Return the list of authorized groups matching the search criteria
    - name: order_by
      in: query
      schema:
        $ref: "../../enums/orderGroupBy.yaml"
      description: > 
        Order groups by `name`, `path`, `id`, or `similarity` (if searching, introduced in GitLab 14.1). Default is `name`
    - name: sort
      in: query
      schema:
        $ref: "../../enums/sortingOrder.yaml"
      description: Order groups in `asc` or `desc` order. Default is `asc`
    - name: statistics
      in: query
      schema:
        type: boolean
      description: Include group statistics (administrators only)
    - name: with_custom_attributes
      in: query
      schema:
        type: boolean
      description: Include custom attributes in response (administrators only)
    - name: owned
      in: query
      schema:
        type: boolean
      description: Limit to groups explicitly owned by the current user
    - name: min_access_level
      in: query
      schema:
        type: integer
      description: Limit to groups where current user has at least this role (`access_level`)
    - name: top_level_only
      in: query
      schema:
        type: boolean
      description: Limit to top level groups, excluding all subgroups

  responses:
    '200':
      description: A list of all groups.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../../schemas/group.yaml"

post:
  tags:
    - Group
  operationId: createNewGroup
  summary: Create a new group
  parameters:

    - name: name
      in: query
      schema:
        type: string      
      description: The name of the group.
      required: true

    - name: path
      in: query
      schema:
        type: string      
      description: The path of the group.
      required: true

    - name: auto_devops_enabled
      in: query
      schema:
        type: boolean
      description: Default to Auto DevOps pipeline for all projects within this group.
    # # - avatar:
    # #   in: query
    # #   schema:
    # #     type: 
    # #   description:
    - name: default_branch_protection
      in: query
      schema:
        type: integer
      description: > 
        See Options for default_branch_protection. Default to the global level default 
        branch protection setting.
    - name: description
      in: query
      schema:
        type: string
      description: The group description.
    - name: emails_disabled
      in: query
      schema:
        type: boolean
      description: Disable email notifications.
    - name: lfs_enabled
      in: query
      schema:
        type: boolean
      description: Enable/disable Large File Storage (LFS) for the projects in this group.
    - name:  mentions_disabled
      in: query
      schema:
        type: boolean
      description: Disable the capability of a group from getting mentioned.
    - name:  parent_id
      in: query
      schema:
        type: integer
      description: The parent group ID for creating nested group.
    - name:  project_creation_level
      in: query
      schema:
        $ref: "../../enums/projectCreationLevel.yaml"
      description: > 
        Determine if developers can create projects in the group. 
        Can be noone (No one), maintainer (users with the Maintainer role), or developer (users with the Developer or Maintainer role).
    - name:  request_access_enabled
      in: query
      schema:
        type: boolean
      description: Allow users to request member access.
    - name: require_two_factor_authentication
      in: query
      schema:
        type: boolean
      description: Require all users in this group to setup Two-factor authentication.
    - name: share_with_group_lock
      in: query
      schema:
        type: boolean
      description: Prevent sharing a project with another group within this group.
    - name: subgroup_creation_level
      in: query
      schema:
        $ref: "../../enums/subgroupCreationLevel.yaml"
      description:  Allowed to create subgroups. Can be owner (Owners), or maintainer (users with the Maintainer role).
    - name: two_factor_grace_period
      in: query
      schema:
        type: integer
      description: Time before Two-factor authentication is enforced (in hours).
    - name: visibility
      in: query
      schema:
        $ref: "../../enums/visibility.yaml"
      description: The groupâ€™s visibility. Can be `private`, `internal`, or `public`.
    - name: membership_lock
      in: query
      schema:
        type: boolean
      description: Users cannot be added to projects in this group.
    - name: extra_shared_runners_minutes_limit
      in: query
      schema:
        type: integer
      description: Can be set by administrators only. Additional CI/CD minutes for this group.
    - name: shared_runners_minutes_limit
      in: query
      schema:
        type: integer
      description: >
        Can be set by administrators only. Maximum number of monthly CI/CD minutes for this 
        group. Can be `nil` (default; inherit system default), `0` (unlimited), or `> 0`.

  requestBody:
    description: Details of the group to create.
    content:
      application/json:
        schema:
          $ref: "../../schemas/group.yaml"
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            $ref: "../../schemas/issue.yaml"
    '400':
      $ref: "../../responses/badRequest.yaml"
    '403':
      $ref: "../../responses/conflict.yaml"
    '409':
      $ref: "../../responses/conflict.yaml"