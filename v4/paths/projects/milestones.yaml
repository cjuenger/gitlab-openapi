# /v4/projects/{id}/milestones

get:
  tags:
    - Project
  operationId: getProjectMilestones
  summary: Returns a list of project milstones.
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type : string
      description: The ID or URL-encoded path of the project owned by the authenticated user.
    - name: iids
      in: query      
      schema:
        type: array
        items:
          type: integer
      description: > 
        Return only the milestones having the given iid 
        **Note:** It is ignored if `include_parent_milestones` is set as `true`!
    - name: page
      in: query
      schema:
        type: integer
      description: Returned issues are paginated and this argument specified the (1-based) page number.
    - name: state
      in: query
      schema:
        $ref: "../../enums/milestoneState.yaml"
      description: Return only `active` or `closed` milestones
    - name: title
      in: query
      schema:
        type: string
      description: Return only the milestones having the given `title`
    - name: serach
      in: query
      schema:
        type: string
      description: Return only milestones with a title or description matching the provided string.
    - name: include_parent_milestones
      in: query
      schema:
        type: boolean
      description: Include group milestones from parent group and its ancestors. Introduced in GitLab 13.4.
  responses:
    '200':
      description: A list of project related issues.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../../schemas/milestone.yaml"
      
post: 
  tags:
    - Project
  operationId: createProjectMilestone
  summary: Creates a new project milestone.
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type : string
      description: The ID or URL-encoded path of the project owned by the authenticated user.
    - name: title
      in: query
      required: true
      schema:
        type: string
      description: Title of the milestone
    - name: description
      in: query
      schema:
        type: string
      description: The description of the milestone
    - name: due_date
      in: query
      schema: 
        type: string
      description: The due date of the milestone 
    - name: start_date
      in: query
      schema:
        type: string
      description: The start date of the milestone.
  responses:
    '200':
      description: A list of project related issues.
      content:
        application/json:
          schema:
            $ref: "../../schemas/milestone.yaml"